{"version":3,"sources":["images/timer.svg","images/close.svg","Modal/components/Timer/Timer.jsx","Modal/components/Boxes/Boxes.jsx","Modal/components/SelectField/SelectField.jsx","Modal/Modal.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Timer","useState","m","d","s","timer","setTimer","time","useEffect","setInterval","className","src","watch","Boxes","checked","setChecked","classNames","onClick","id","type","name","onChange","htmlFor","SelectField","selectedValue","setSelectedValue","value","target","Modal","setModalVisible","openNotificationWithIcon","notification","message","description","handleEsc","event","keyCode","window","addEventListener","removeEventListener","close","App","modalVisible","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.26cc3dba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/timer.2ebe5794.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.0c3eec56.svg\";","import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport watch from '../../../images/timer.svg';\nimport './Timer.scss';\n\nexport const Timer = () => {\n  const [timer, setTimer] = useState({m: 16, d: 0, s: 0});\n    let {m , d, s } = timer;\n  \n    const time = () => {\n    if (s) {\n      s = s - 1;\n    } else if (d) {\n      d = d -1;\n      s = 9;\n    } else if (m) {\n      m = m -1;\n      d = 5;\n      s = 9\n    }\n\n    return setTimer({m, d, s});\n  }\n  \n  const startTimer = () => {\n    debugger;\n    setInterval(time, 1000);\n  };\n\n  useEffect(()=> {\n    startTimer();\n  }, []);\n\n  return (\n    <div className=\"modal__timer\">\n      <div className=\"modal__timer-image\">\n        <img src={watch}></img>\n      </div>\n      <div className=\"modal__timer-item\">\n        {`00:${timer.m}:${timer.d}${timer.s}`}\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport './Boxes.scss';\n\nexport const Boxes = ({checked, setChecked}) => {\n\n  return (\n    <div className=\"boxes\">\n      <div \n        className={ classNames(\"box\",{ 'box__large': checked === '100' })}\n        onClick={()=>setChecked('100')}\n      >\n        <div className=\"box__title\">\n          <span className=\"box__title-text\">Пополнить на</span>\n          <span className=\"box__title-sum\">{'$ 50'}</span>\n        </div>\n        <div className=\"box__main\">\n          <span className=\"box__main-text\">Получить</span>\n          <span className=\"box__main-sum\">{'$ 100'}</span>\n        </div>\n        <input id=\"radio50\" className=\"box__radio\"\n          type=\"radio\" name=\"radio-group\"\n          onChange={()=>setChecked('100')}\n          checked={checked === '100'}\n        />\n        <label htmlFor=\"radio50\"className=\"box__radio-label\"></label>\n      </div>\n\n      <div \n        className={ classNames(\"box\",{ 'box__large': checked === '200' })}\n        onClick={()=>setChecked('200')}\n      >\n        <div className=\"box__title\">\n          <span className=\"box__title-text\">Пополнить на</span>\n          <span className=\"box__title-sum\">{'$ 100'}</span>\n        </div>\n        <div className=\"box__main\">\n          <span className=\"box__main-text\">Получить</span>\n          <span className=\"box__main-sum\">{'$ 200'}</span>\n        </div>\n        <input id=\"radio\" className=\"box__radio\"\n          type=\"radio\" name=\"radio-group\"\n          onChange={()=>setChecked('200')}\n          checked={checked === '200'}\n        />\n        <label htmlFor=\"radio\"className=\"box__radio-label\"></label>\n      </div>\n\n      <div \n        className={ classNames(\"box\",{ 'box__large': checked === '1000' })}\n        onClick={()=>setChecked('1000')}\n      >\n        <div className=\"box__title\">\n          <span className=\"box__title-text\">Пополнить на</span>\n          <span className=\"box__title-sum\">{'$ 500'}</span>\n        </div>\n        <div className=\"box__main\">\n          <span className=\"box__main-text\">Получить</span>\n          <span className=\"box__main-sum\">{'$ 1000'}</span>\n        </div>\n        <input id=\"radio500\" className=\"box__radio\"\n          type=\"radio\"  name=\"radio-group\"\n          onChange={()=>setChecked('1000')}\n          checked={checked === '1000'}\n        />\n        <label htmlFor=\"radio500\"className=\"box__radio-label\"></label>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport './SelectField.scss';\n\nexport const SelectField = ({selectedValue, setSelectedValue}) => {\n\n  return (\n    <select \n      className=\"selector\"\n      value={selectedValue}\n      onChange={({target})=>setSelectedValue(target.value)}>\n      <option value={'Банковская карта'} className=\"selector__option\">\n        Банковская карта\n      </option>\n      <option value={'Биткоин'} className=\"selector__option\">\n        Биткоин\n      </option>\n      <option value={'Выставить счет'} className=\"selector__option\">\n        Выставить счет\n      </option>\n    </select>\n  )\n}\n","import React, {useState, useEffect, Component} from 'react';\nimport { Timer } from './components/Timer';\nimport { Boxes } from './components/Boxes';\nimport { SelectField } from './components/SelectField';\nimport { notification } from 'antd';\nimport close from '../images/close.svg';\nimport 'antd/dist/antd.css';\nimport './Modal.scss';\n\n\nexport const Modal = ({setModalVisible}) => {\n  const [checked, setChecked] = useState('0');\n  const [selectedValue, setSelectedValue] = useState('Банковская карта');\n\n  const openNotificationWithIcon = type => {\n    type === 'info'\n      ? notification['info']({\n        message: 'Операция не доступна',\n        description:\n          'Выберите, пожалуйста, сумму пополнения',\n      })\n      : notification['success']({\n        message: 'Операция выполнена успешно!',\n        description:\n          `Способ оплаты: ${selectedValue}. `\n          + `На ваш счет будет зачисленно $${checked}`,\n      });\n    setChecked('0')\n  };\n\n  useEffect(() => {\n    const handleEsc = (event) => {\n       if (event.keyCode === 27) {\n        setModalVisible(false)\n      }\n    };\n    window.addEventListener('keydown', handleEsc);\n\n    return () => {\n      window.removeEventListener('keydown', handleEsc);\n    };\n  }, []);\n\n  return (\n    <div \n      className=\"container\"\n    >\n      <div className=\"modal\">\n        <div className=\"modal__bonus\">\n          <span className=\"modal__bonus-text\">+100%</span>\n        </div>\n        <button \n          className=\"modal__close\"\n          onClick={()=>setModalVisible(false)}\n        >\n          <img src={close} className=\"modal__close-image\"></img>\n        </button>\n        <Timer />\n        <div className=\"modal__header\">\n          <h1>Увеличьте свой депозит!</h1>\n        </div>\n        <div className=\"modal__selector\">\n          <SelectField \n            selectedValue={selectedValue}\n            setSelectedValue={setSelectedValue}\n          />\n        </div>\n        < Boxes checked={checked} setChecked={setChecked}/>\n        <div className=\"modal__total\">\n          <span className=\"modal__total-normal\">{`$${checked},`}</span>\n          <span className=\"modal__total-small\">00</span>\n          <span> будет зачисленно вам на счет</span>\n        </div>\n        <div className=\"modal__button\">\n          <div className=\"modal__button-light\"></div>\n          <button \n            className=\"modal__button-submit\"\n            onClick={() => checked === '0'\n              ? openNotificationWithIcon('info')\n              : openNotificationWithIcon('success')\n            }\n          >\n            <span>Пополнить</span>\n          </button>\n        </div>\n        <div className=\"modal__description\">\n          <span>При пополнении счета с банковской карты списание средств\n            <br/>происходит по курсу банка клиента\n            <br/>\n          </span>\n          <span className=\"modal__description-details\">ПОДРОБНЕЕ</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from 'react';\nimport { Modal } from './Modal';\nimport 'typeface-montserrat';\nimport './App.scss';\n\nfunction App() {\n  const [modalVisible, setModalVisible] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <button className=\"modal-button\" onClick={()=>setModalVisible(true)}>\n        <span className=\"modal-button__text\">Открыть модалку</span>\n      </button>\n      {modalVisible && (\n        <Modal modalVisible={modalVisible} setModalVisible={setModalVisible}/>\n      )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}